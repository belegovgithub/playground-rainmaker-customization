---
ReportDefinitions:
- reportName: ReceiptRegister
  summary: Receipt Register
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: PT_ULB_CITY 
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.propertyId 
    type: string
    source: pt
    total: false
  - name: receiptnumber
    label: PT_RECEIPT_RECEIPT_NO 
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: paymentmode
    label: PT_RECEIPT_PAYMENT_MODE
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: PT_RECEIPT_TRANSACTION_ID 
    type: string
    source: pt
    total: false
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true  
  - name: housetax
    label: reports.pt.housetax
    type: string
    source: pt
    total: true
  - name: watertax
    label: PT_WATER_TAX 
    type: string
    source: pt
    total: true
  - name: conservancytax
    label: PT_CONSERVANCY_TAX
    type: string
    source: pt
    total: true
  - name: lightiningtax
    label: PT_LIGHTINING_TAX
    type: string
    source: pt
    total: true
  - name: educationtax
    label: PT_EDUCATION_TAX
    type: string
    source: pt
    total: true 
  - name: totalcollection
    label: PT_TOTAL_AMOUNT 
    type: string
    source: pt
    total: true
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: mohallaname
    label: PT_PROPERTY_ADDRESS_MOHALLA
    type: string
    source: pt
    total: false
  - name: doorno
    label: PT_COMMON_DOOR_NO_LABEL
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CASH:CASH,Online:Online,CARD:CARD,DD:DD,CHEQUE:CHEQUE'
    source: pt
    isMandatory: false
    searchClause: AND paymentmode = $paymentMode
  - name: collectorname
    label: Collector Name
    type: singlevaluelist
    pattern: http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=PTCEMP|$.Employees[*].user.id|$.Employees[*].user.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND un.id = $collectorname::INTEGER
  query: |
    select initcap(split_part(pay.tenantid, '.', 2)) as tenantid,
    bill.consumercode as propertyid,
    pd.receiptnumber  as receiptnumber,
    To_char(To_timestamp(pd.receiptdate/1000 ), 'DD/MM/YYYY')  AS receiptdate,
    pay.paymentmode as paymentmode,
    pay.transactionnumber as transactionnumber,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST%' THEN bad.amount ELSE 0 END) as interest,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY%' or taxheadcode LIKE 'PT_LATE_ASSESSMENT_PENALTY' THEN bad.amount ELSE 0 END) as penalty,
    SUM(CASE WHEN taxheadcode LIKE 'PT_HOUSE_TAX' THEN bad.amount ELSE 0 END) as housetax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_WATER_TAX'  THEN bad.amount ELSE 0 END) as watertax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN bad.amount ELSE 0 END) as conservancytax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_LIGHTINING_TAX' THEN bad.amount ELSE 0 END) as lightiningtax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_TAX' THEN bad.amount ELSE 0 END) as educationtax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' or taxheadcode like 'PT_PROMOTIONAL_REBATE' THEN bad.amount ELSE 0 END) as rebate,
    pd.amountpaid as totalcollection,
    un.name as collectorname,
    msg.message as mohallaname,
    addr.doorno as doorno,
    eu.name as ownername
    from egcl_payment pay,
    egcl_paymentdetail pd,
    egcl_bill bill,
    egcl_billdetial bd,
    egcl_billaccountdetail bad,
    eg_user un,
    eg_pt_address addr,
    eg_user eu,
    message msg,
    eg_pt_property pt
    where pd.paymentid= pay.id and
    pd.billid=bill.id and
    bd.billid=bill.id and
    bad.billdetailid=bd.id and
    pay.createdby=CAST(un.id as varchar) and
    addr.propertyid=pt.id and
    pt.propertyid=bill.consumercode and
    RIGHT(msg.code,8)=addr.locality and
    msg.tenantid=pay.tenantid and
    eu.uuid=(select poo.userid from eg_pt_owner poo where poo.propertyid=(select pdd.id from eg_pt_property pdd where pdd.propertyid= bill.consumercode fetch first 1 row only) fetch first 1 row only) and
    msg.locale='en_IN' and
    pay.tenantid LIKE $tenantid and 
    pd.businessservice='PT'and 
    pay.paymentstatus != 'CANCELLED' AND pay.tenantid != 'pb.testing'
  groupby: GROUP BY pay.tenantid,pd.receiptnumber,bill.consumercode,pd.receiptdate,pay.transactionnumber,pay.paymentmode,un.name,msg.message,addr.doorno,eu.name,pd.amountpaid

- reportName: CancelledReceiptRegister
  summary: Receipt Register for cancelled Receipts
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: PT_ULB_CITY 
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.propertyId 
    type: string
    source: pt
    total: false
  - name: receiptnumber
    label: PT_RECEIPT_RECEIPT_NO 
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: paymentmode
    label: PT_RECEIPT_PAYMENT_MODE
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: PT_RECEIPT_TRANSACTION_ID 
    type: string
    source: pt
    total: false
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: false
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: false  
  - name: housetax
    label: reports.pt.housetax
    type: string
    source: pt
    total: true
  - name: watertax
    label: PT_WATER_TAX 
    type: string
    source: pt
    total: true
  - name: conservancytax
    label: PT_CONSERVANCY_TAX
    type: string
    source: pt
    total: true
  - name: lightiningtax
    label: PT_LIGHTINING_TAX
    type: string
    source: pt
    total: true
  - name: educationtax
    label: PT_EDUCATION_TAX
    type: string
    source: pt 
  - name: totalcollection
    label: PT_TOTAL_AMOUNT 
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CASH:CASH,Online:Online,CARD:CARD,DD:DD,CHEQUE:CHEQUE'
    source: pt
    isMandatory: false
    searchClause: AND paymentmode = $paymentMode
  query: |
    select initcap(split_part(pay.tenantid, '.', 2)) as tenantid,
    bill.consumercode as propertyid,
    pd.receiptnumber  as receiptnumber,
    To_char(To_timestamp(pd.receiptdate/1000 ), 'DD/MM/YYYY')  AS receiptdate,
    pay.paymentmode as paymentmode,
    pay.transactionnumber as transactionnumber,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST%' THEN bad.amount ELSE 0 END) as interest,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY%' THEN bad.amount ELSE 0 END) as penalty,
    SUM(CASE WHEN taxheadcode LIKE 'PT_HOUSE_TAX' THEN bad.amount ELSE 0 END) as housetax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_WATER_TAX'  THEN bad.amount ELSE 0 END) as watertax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN bad.amount ELSE 0 END) as conservancytax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_TAX' THEN bad.amount ELSE 0 END) as educationtax ,
    (SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN bad.amount ELSE 0 END)  + SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY%' THEN bad.amount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_HOUSE_TAX' THEN bad.amount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_WATER_TAX' THEN bad.amount ELSE 0 END)  +SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN bad.amount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN bad.amount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_TAX' THEN bad.amount ELSE 0 END)) as totalcollection
    from egcl_payment pay,
    egcl_paymentdetail pd,
    egcl_bill bill,
    egcl_billdetial bd,
    egcl_billaccountdetail bad
    where pd.paymentid= pay.id and
    pd.billid=bill.id and
    bd.billid=bill.id and
    bad.billdetailid=bd.id and
    pay.tenantid LIKE $tenantid and 
    pd.businessservice='PT'and 
    pay.paymentstatus = 'CANCELLED' AND pay.tenantid != 'pb.testing'
  groupby: GROUP BY pay.tenantid,pd.receiptnumber,bill.consumercode,pd.receiptdate,pay.transactionnumber,pay.paymentmode

- reportName: CBPTCollection
  summary: CB wise PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: totalassessments
    label: reports.pt.totalassessments
    type: string
    source: pt
    total: true
  - name: totalamount
    label: PT_TOTAL_AMOUNT
    type: string
    source: pt
    total: true
  - name: totalamountpaid
    label: PT_AMOUNT_PAID
    type: string
    source: pt
    total: true
  - name: totaloffline
    label: reports.pt.totaloffline
    type: string
    source: pt
    total: true
  - name: totalonline
    label: reports.pt.totalonline
    type: string
    source: pt
    total: true
  - name: totalamountdue
    label: PT_TOTAL_DUES
    type: string
    source: pt
    total: true
  searchParams:
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  query: |
    SELECT 
      bill.tenantid, 
      COUNT(*) AS totalassessments,
      SUM(bill.totalamount) AS totalamount, 
      SUM(pd.amountpaid) AS totalamountpaid,
      SUM(onl.totalamountpaid) as online,
      SUM(offl.totalamountpaid) as offline, 
      (SUM(bill.totalamount) - SUM(pd.amountpaid)) AS totalamountdue
    FROM eg_pt_asmt_assessment AS asmt
    LEFT OUTER JOIN (Select DISTINCT on (consumercode) bill.id,tenantid,consumercode,status,totalamount from egcl_bill bill ) as bill ON bill.consumercode = asmt.propertyid  and bill.status != 'Cancelled'
    LEFT OUTER JOIN (SELECT billid,amountpaid,paymentid from egcl_paymentdetail pd ) as pd ON pd.billid = bill.id
    LEFT OUTER JOIN (SELECT id,paymentmode,totalamountpaid FROM egcl_payment WHERE paymentmode = 'ONLINE') AS onl ON onl.id = pd.paymentid 
    LEFT OUTER JOIN (SELECT id,paymentmode,totalamountpaid FROM egcl_payment WHERE paymentmode != 'ONLINE' ) AS offl ON offl.id = pd.paymentid   
    WHERE bill.tenantid = $tenantid
  groupby: GROUP BY bill.tenantid
  orderby: ORDER BY bill.tenantid

- reportName: StateCancelledReceiptRegister
  summary: Receipt Register for cancelled Receipts State
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: PT_ULB_CITY 
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.propertyId 
    type: string
    source: pt
    total: false
  - name: receiptnumber
    label: PT_RECEIPT_RECEIPT_NO 
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: paymentmode
    label: PT_RECEIPT_PAYMENT_MODE
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: PT_RECEIPT_TRANSACTION_ID 
    type: string
    source: pt
    total: false
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: false
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: false  
  - name: housetax
    label: reports.pt.housetax
    type: string
    source: pt
    total: true
  - name: watertax
    label: PT_WATER_TAX 
    type: string
    source: pt
    total: true
  - name: conservancytax
    label: PT_CONSERVANCY_TAX
    type: string
    source: pt
    total: true
  - name: lightiningtax
    label: PT_LIGHTINING_TAX
    type: string
    source: pt
    total: true
  - name: educationtax
    label: PT_EDUCATION_TAX
    type: string
    source: pt 
  - name: totalcollection
    label: PT_TOTAL_AMOUNT 
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CASH:CASH,Online:Online,CARD:CARD,DD:DD,CHEQUE:CHEQUE'
    source: pt
    isMandatory: false
    searchClause: AND paymentmode = $paymentMode
  query: |
    select initcap(split_part(pay.tenantid, '.', 2)) as tenantid,
    bill.consumercode as propertyid,
    pd.receiptnumber  as receiptnumber,
    To_char(To_timestamp(pd.receiptdate/1000 ), 'DD/MM/YYYY')  AS receiptdate,
    pay.paymentmode as paymentmode,
    pay.transactionnumber as transactionnumber,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST%' THEN bad.amount ELSE 0 END) as interest,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY%' THEN bad.amount ELSE 0 END) as penalty,
    SUM(CASE WHEN taxheadcode LIKE 'PT_HOUSE_TAX' THEN bad.amount ELSE 0 END) as housetax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_WATER_TAX'  THEN bad.amount ELSE 0 END) as watertax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN bad.amount ELSE 0 END) as conservancytax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_TAX' THEN bad.amount ELSE 0 END) as educationtax ,
    (SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN bad.amount ELSE 0 END)  + SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY%' THEN bad.amount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_HOUSE_TAX' THEN bad.amount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_WATER_TAX' THEN bad.amount ELSE 0 END)  +SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN bad.amount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN bad.amount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_TAX' THEN bad.amount ELSE 0 END)) as totalcollection
    from egcl_payment pay,
    egcl_paymentdetail pd,
    egcl_bill bill,
    egcl_billdetial bd,
    egcl_billaccountdetail bad
    where pd.paymentid= pay.id and
    pd.billid=bill.id and
    bd.billid=bill.id and
    bad.billdetailid=bd.id and
    pd.businessservice='PT'and 
    pay.paymentstatus = 'CANCELLED' AND pay.tenantid != 'pb.testing'
  groupby: GROUP BY pay.tenantid,pd.receiptnumber,bill.consumercode,pd.receiptdate,pay.transactionnumber,pay.paymentmode

- reportName: CBWidePtCollection
  summary: CB Wide PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: reports.pt.ulbName
    type: string
    source: pt
    total: false
  - name: totalassessments
    label: reports.pt.totalassessments
    type: string
    source: pt
    total: true
  - name: totalamount
    label: PT_TOTAL_AMOUNT
    type: string
    source: pt
    total: true  
  - name: totalamountpaid
    label: PT_AMOUNT_PAID
    type: string
    source: pt
    total: true
  - name: totaloffline
    label: reports.pt.totaloffline
    type: string
    source: pt
    total: true
  - name: totalonline
    label: reports.pt.totalonline
    type: string
    source: pt
    total: true
  - name: totalamountdue
    label: PT_TOTAL_DUES
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate <= $toDate
  - name: ulb
    label: ULB
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND tenantid = $ulb
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  query: |
    SELECT 
      initcap(split_part(bill.tenantid, '.', 2)) as tenantid, 
      COUNT(*) AS totalassessments,
      SUM(bill.totalamount) AS totalamount, 
      SUM(pd.amountpaid) AS totalamountpaid,
      SUM(onl.totalamountpaid) as online,
      SUM(offl.totalamountpaid) as offline, 
      (SUM(bill.totalamount) - SUM(pd.amountpaid)) AS totalamountdue
    FROM eg_pt_asmt_assessment AS asmt
    LEFT OUTER JOIN (Select DISTINCT on (consumercode) bill.id,tenantid,consumercode,status,totalamount from egcl_bill bill ) as bill ON bill.consumercode = asmt.propertyid  and bill.status != 'Cancelled'
    LEFT OUTER JOIN (SELECT billid,amountpaid,paymentid from egcl_paymentdetail pd ) as pd ON pd.billid = bill.id
    LEFT OUTER JOIN (SELECT id,paymentmode,totalamountpaid FROM egcl_payment WHERE paymentmode = 'ONLINE') AS onl ON onl.id = pd.paymentid 
    LEFT OUTER JOIN (SELECT id,paymentmode,totalamountpaid FROM egcl_payment WHERE paymentmode != 'ONLINE' ) AS offl ON offl.id = pd.paymentid   
    WHERE bill.tenantid != 'pb.testing'
  groupby: GROUP BY bill.tenantid
  orderby: ORDER BY bill.tenantid, totalamountpaid DESC NULLS LAST

- reportName: UlbWisePtCollection
  summary: State Wide PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: totalassessments
    label: reports.pt.totalassessments
    type: string
    source: pt
    total: true
  - name: totalamountpaid
    label: PT_AMOUNT_PAID
    type: string
    source: pt
    total: true
  - name: totaloffline
    label: reports.pt.totaloffline
    type: string
    source: pt
    total: true
  - name: totalonline
    label: reports.pt.totalonline
    type: string
    source: pt
    total: true
  - name: totalamountdue
    label: PT_TOTAL_DUES
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate <= $toDate
  - name: financialyear
    label: Financial Year
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  - name: usage
    label: Usage
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=PropertyTax&masterName=UsageCategoryMajor|$..code|$..name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND usagecategorymajor = $usage
  query: |
      SELECT 
      initcap(split_part(tenantid, '.', 2)) as tenantid, 
      COUNT(*) AS totalassessments, 
      SUM(totalamount) AS totalamount, 
      SUM(amount) AS totalamountpaid, 
      SUM(CASE WHEN collectiontype LIKE 'ONLINE' THEN amount ELSE 0 END) AS totalonline, 
      SUM(CASE WHEN collectiontype LIKE 'COUNTER' THEN amount ELSE 0 END) AS totaloffline, 
      (SUM(totalamount) - SUM(amount)) AS totalamountdue 
      FROM eg_pt_propertydetail_v2 AS pd 
      LEFT OUTER JOIN (SELECT consumercode, totalamount, amount, collectiontype, receiptdate FROM egcl_receiptheader AS rh 
      LEFT OUTER JOIN egcl_receiptinstrument AS ri ON rh.id = ri.receiptheader 
      LEFT OUTER JOIN egcl_instrumentheader AS ih ON ri.instrumentheader = ih.id and ih.instrumentstatus	 != 'CANCELLED' 
      where rh.status != 'Cancelled'
      ) AS tbl_amounts ON CONCAT(pd.property, ':', pd.assessmentnumber) = tbl_amounts.consumercode 
      WHERE tenantid LIKE CONCAT(SPLIT_PART($tenantid, '.', 1), '%') and tenantid = $tenantid
  groupby: GROUP BY tenantid
  orderby: ORDER BY tenantid, totalamountpaid DESC NULLS LAST

- reportName: DGDEReceiptRegister
  summary: Receipt Register
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: PT_ULB_CITY 
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.propertyId 
    type: string
    source: pt
    total: false
  - name: receiptnumber
    label: PT_RECEIPT_RECEIPT_NO 
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: paymentmode
    label: PT_RECEIPT_PAYMENT_MODE
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: PT_RECEIPT_TRANSACTION_ID 
    type: string
    source: pt
    total: false
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: penalty
    label: reports.pt.penalty
    type: string
    source: pt
    total: true  
  - name: housetax
    label: reports.pt.housetax
    type: string
    source: pt
    total: true
  - name: watertax
    label: PT_WATER_TAX 
    type: string
    source: pt
    total: true
  - name: conservancytax
    label: PT_CONSERVANCY_TAX
    type: string
    source: pt
    total: true
  - name: lightiningtax
    label: PT_LIGHTINING_TAX
    type: string
    source: pt
    total: true
  - name: educationtax
    label: PT_EDUCATION_TAX
    type: string
    source: pt
    total: true 
  - name: totalcollection
    label: PT_TOTAL_AMOUNT 
    type: string
    source: pt
    total: true
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: mohallaname
    label: PT_PROPERTY_ADDRESS_MOHALLA
    type: string
    source: pt
    total: false
  - name: doorno
    label: PT_COMMON_DOOR_NO_LABEL
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  - name: paymentMode
    label: Payment Mode
    type: singlevaluelist
    pattern: 'list://CASH:CASH,Online:Online,CARD:CARD,DD:DD,CHEQUE:CHEQUE'
    source: pt
    isMandatory: false
    searchClause: AND paymentmode = $paymentMode
  - name: collectorname
    label: Collector Name
    type: singlevaluelist
    pattern: http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=PTCEMP|$.Employees[*].user.id|$.Employees[*].user.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND un.id = $collectorname::INTEGER
  query: |
    select initcap(split_part(pay.tenantid, '.', 2)) as tenantid,
    bill.consumercode as propertyid,
    pd.receiptnumber  as receiptnumber,
    To_char(To_timestamp(pd.receiptdate/1000 ), 'DD/MM/YYYY')  AS receiptdate,
    pay.paymentmode as paymentmode,
    pay.transactionnumber as transactionnumber,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST%' THEN bad.amount ELSE 0 END) as interest,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY%' or taxheadcode LIKE 'PT_LATE_ASSESSMENT_PENALTY' THEN bad.amount ELSE 0 END) as penalty,
    SUM(CASE WHEN taxheadcode LIKE 'PT_HOUSE_TAX' THEN bad.amount ELSE 0 END) as housetax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_WATER_TAX'  THEN bad.amount ELSE 0 END) as watertax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN bad.amount ELSE 0 END) as conservancytax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_LIGHTINING_TAX' THEN bad.amount ELSE 0 END) as lightiningtax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_TAX' THEN bad.amount ELSE 0 END) as educationtax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE' or taxheadcode like 'PT_PROMOTIONAL_REBATE' THEN bad.amount ELSE 0 END) as rebate,
    pd.amountpaid as totalcollection,
    un.name as collectorname,
    msg.message as mohallaname,
    addr.doorno as doorno,
    eu.name as ownername
    from egcl_payment pay,
    egcl_paymentdetail pd,
    egcl_bill bill,
    egcl_billdetial bd,
    egcl_billaccountdetail bad,
    eg_user un,
    eg_pt_address addr,
    eg_user eu,
    message msg,
    eg_pt_property pt
    where pd.paymentid= pay.id and
    pd.billid=bill.id and
    bd.billid=bill.id and
    bad.billdetailid=bd.id and
    pay.createdby=CAST(un.id as varchar) and
    addr.propertyid=pt.id and
    pt.propertyid=bill.consumercode and
    RIGHT(msg.code,8)=addr.locality and
    msg.tenantid=pay.tenantid and
    eu.uuid=(select poo.userid from eg_pt_owner poo where poo.propertyid=(select pdd.id from eg_pt_property pdd where pdd.propertyid= bill.consumercode fetch first 1 row only) fetch first 1 row only) and
    msg.locale='en_IN' and
    pay.tenantid !='pb.testing' and 
    pd.businessservice='PT'and 
    pay.paymentstatus != 'CANCELLED' 
  groupby: GROUP BY pay.tenantid,pd.receiptnumber,bill.consumercode,pd.receiptdate,pay.transactionnumber,pay.paymentmode,un.name,msg.message,addr.doorno,eu.name,pd.amountpaid

- reportName: DemandRegisterReport
  summary: Reports for Reconcillation of data in PT
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: abasid
    label: PT_EXISTING_PROPERTY_ID
    type: string
    source: pt
    total: false
  - name: name
    label: PT_OWNER_NAME
    type: string
    total: false
    source: pt
  - name: mobilenumber
    label: PT_COMMON_APPLICANT_MOBILE_NO_LABEL
    type: string
    total: false
    source: pt    
  - name: doorno
    label: PT_COMMON_DOOR_NO_LABEL
    type: string
    source: pt
    total: false
  - name: mohallaname
    label: PT_PROPERTY_ADDRESS_MOHALLA
    type: string
    source: pt
    total: false
  - name: propertytype
    label: PT_COMMON_PROPERTY_TYPE
    type: string
    source: pt
    total: false
  - name: propertysubtype
    label: reports.pt.Propertysubtype
    type: string
    source: pt
    total: false
  - name: usagetype
    label: PT_COMMON_USAGE_TYPE
    type: string
    source: pt
    total: false
  - name: subusagetype
    label: PT_COMMON_SUB_USAGE_TYPE
    type: string
    source: pt
    total: false
  - name: arv
    label: PT_ASSESMENT_INFO_AREA_RENT
    type: string
    source: pt
    total: true    
  - name: housetax
    label: reports.pt.housetax
    type: string
    source: pt
    total: true
  - name: watertax
    label: PT_WATER_TAX
    type: string
    source: pt
    total: true
  - name: conservancytax
    label: PT_CONSERVANCY_TAX
    type: string
    source: pt
    total: true
  - name: educationtax
    label: PT_EDUCATION_TAX
    type: string
    source: pt
    total: true  
  - name: penalty
    label:  reports.pt.penalty
    type: string
    source: pt
    total: true
  - name: rebate
    label: reports.pt.rebate
    type: string
    source: pt
    total: true
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true  
  - name: totaltax
    label: PT_TOTAL_AMOUNT
    type: string
    source: pt
    total: true
  - name: totalcollected
    label: PT_COLLECTED
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND demand.createddate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND demand.createddate <= $toDate
  - name: Wardname
    label: WardName
    type: singlevaluelist
    pattern: http://egov-location:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&boundaryType=Block&tenantId=$tenantid|$.TenantBoundary[*].boundary[*].code|$.TenantBoundary[*].boundary[*].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND addr.locality = $Wardname
  query: | 
    select initcap(split_part(demand.tenantid, '.', 2)) as tenantid,
    demand.consumercode as propertyid,pt.oldpropertyid as abasid,
    initcap(split_part(pt.propertytype, '.', 1)) as propertytype,
    initcap(split_part(pt.propertytype, '.', 2)) as propertysubtype,
    initcap(split_part(ptunit.usagecategory, '.', 1)) as usagetype,
    initcap(split_part(ptunit.usagecategory, '.', 2)) as subusagetype,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST%' THEN demanddetail.taxamount ELSE 0 END) as interest,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY%' THEN demanddetail.taxamount ELSE 0 END) as penalty,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE%' THEN demanddetail.taxamount ELSE 0 END) as rebate,
    SUM(CASE WHEN taxheadcode LIKE 'PT_HOUSE_TAX' THEN demanddetail.taxamount ELSE 0 END) as housetax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_WATER_TAX'  THEN demanddetail.taxamount ELSE 0 END) as watertax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN demanddetail.taxamount ELSE 0 END) as conservancytax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_TAX' THEN demanddetail.taxamount ELSE 0 END) as educationtax,
    (SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN demanddetail.taxamount ELSE 0 END)  + SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY%' THEN demanddetail.taxamount ELSE 0 END) + SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE%' THEN demanddetail.taxamount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_HOUSE_TAX' THEN demanddetail.taxamount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_WATER_TAX' THEN demanddetail.taxamount ELSE 0 END)  +SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN demanddetail.taxamount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN demanddetail.taxamount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_TAX' THEN demanddetail.taxamount ELSE 0 END)) as totaltax,
    (SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST' THEN demanddetail.collectionamount ELSE 0 END)  + SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_PENALTY%' THEN demanddetail.collectionamount ELSE 0 END) + SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_REBATE%' THEN demanddetail.collectionamount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_HOUSE_TAX' THEN demanddetail.collectionamount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_WATER_TAX' THEN demanddetail.collectionamount ELSE 0 END)  +SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN demanddetail.collectionamount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN demanddetail.collectionamount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_TAX' THEN demanddetail.collectionamount ELSE 0 END)) as totalcollection,
    ptunit.arv as arv,
    msg.message as mohallaname,
    addr.doorno as doorno,
    eu.name as name,
    eu.mobilenumber as mobilenumber
    from egbs_demand_v1 demand,
    egbs_demanddetail_v1 demanddetail,
    eg_pt_address addr,
    eg_pt_unit ptunit,
    eg_user eu,
    message msg,
    eg_pt_property pt 
    where demanddetail.demandid= demand.id and
    pt.propertyid=demand.consumercode and
    addr.propertyid=pt.id and
    ptunit.propertyid = pt.id and
    RIGHT(msg.code,8)=addr.locality and
    msg.tenantid=demand.tenantid and
    eu.uuid=(select poo.userid from eg_pt_owner poo where poo.propertyid=(select pdd.id from eg_pt_property pdd where pdd.propertyid= demand.consumercode fetch first 1 row only) fetch first 1 row only) and     msg.locale='en_IN' and
    demand.tenantid LIKE $tenantid and
    demand.businessservice ='PT' 
  groupby:  GROUP BY demand.tenantid,demand.consumercode,addr.doorno,msg.message,addr.doorno,eu.name,pt.oldpropertyid,pt.propertytype,ptunit.usagecategory,eu.mobilenumber, ptunit.arv
  orderby:  ORDER BY demand.consumercode
