---
ReportDefinitions:
- reportName: ReceiptRegister
  summary: Receipt Register
  version: 1.0.0
  moduleName: rainmaker-pt
  additionalConfig:
    print:
      pdfPageSize: "A2"
  decryptionPathId: ReceiptRegister
  externalService:
  - entity: $.TenantBoundary[0].boundary
    apiURL: http://egov-location:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&boundaryType=Locality&tenantId=$tenantId
    keyOrder: name,code
    tableName: tbl_boundary
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyId 
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: PT_EXISTING_PROPERTY_ID
    type: string
    source: pt
    total: false  
  - name: receiptnumber
    label: PT_RECEIPT_RECEIPT_NO 
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: paymentmode
    label: PT_RECEIPT_PAYMENT_MODE
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: PT_RECEIPT_TRANSACTION_ID 
    type: string
    source: pt
    total: false
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: demandnoticecharge
    label: reports.pt.demandnotice
    type: string
    source: pt
    total: true  
  - name: housetax
    label: reports.pt.housetax
    type: string
    source: pt
    total: true
  - name: watertax
    label: PT_WATER_TAX 
    type: string
    source: pt
    total: true
  - name: conservancyandscaveningtax
    label: PT_CONSERVANCY_TAX
    type: string
    source: pt
    total: true
  - name: lightininganddrainagetax
    label: PT_LIGHTINING_TAX
    type: string
    source: pt
    total: true
  - name: lightingtax
    label: PT_LIGHTING_TAX
    type: string
    source: pt
    total: true
  - name: educationtax
    label: PT_EDUCATION_TAX
    type: string
    source: pt
    total: true 
  - name: consolidatedpropertytax
    label: PT_CONSOLIDATED_PROPERTY_TAX
    type: string
    source: pt
    total: true 
  - name: sanitarycess
    label: PT_SANITARY_CESS
    type: string
    source: pt
    total: true
  - name: educationcess
    label: PT_EDUCATION_CESS
    type: string
    source: pt
    total: true 
  - name: additionalwatertax
    label: PT_ADDL_WATER_TAX
    type: string
    source: pt
    total: true 
  - name: drainagetax
    label: PT_DRAINAGE_TAX
    type: string
    source: pt
    total: true
  - name: scavengingtax
    label: PT_SCAVENGING_TAX
    type: string
    source: pt
    total: true  
  - name: librarycess
    label: PT_LIBRARY_CESS
    type: string
    source: pt
    total: true 
  - name: conservancytax
    label: PT_CONSERVE_TAX
    type: string
    source: pt
    total: true   
  - name: specialconservancytax
    label: PT_SPECIAL_CONSERVANCY_TAX
    type: string
    source: pt
    total: true       
  - name: cash
    label: reports.pt.cash
    type: string
    source: pt
    total: true
  - name: card
    label: reports.pt.card
    type: string
    source: pt
    total: true
  - name: online
    label: reports.pt.online
    type: string
    source: pt
    total: true    
  - name: totalcollection
    label: PT_TOTAL_AMOUNT 
    type: string
    source: pt
    total: true
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: mohallaname
    label: PT_PROPERTY_ADDRESS_MOHALLA
    type: string
    source: pt
    total: false
  - name: doorno
    label: PT_COMMON_DOOR_NO_LABEL
    type: string
    source: pt
    total: false
  - name: name
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  - name: paymentMode
    label: PT_RECEIPT_PAYMENT_MODE
    type: singlevaluelist
    pattern: 'list://CARD:Card,CASH:Cash,CHEQUE:Cheque,Online:Online'
    source: pt
    isMandatory: false
    searchClause: AND paymentmode = $paymentMode
  - name: collectorname
    label: reports.pt.collectorname
    type: singlevaluelist
    pattern: http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=PT_CEMP|$.Employees[*].user.id|$.Employees[*].user.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND un.id = $collectorname::INTEGER
  query: |
    select initcap(split_part(pay.tenantid, '.', 2)) as tenantid,
    bill.consumercode as propertyid,pt.oldpropertyid as oldpropertyid,
    pd.receiptnumber  as receiptnumber,
    To_char(To_timestamp(pd.receiptdate/1000 ), 'DD/MM/YYYY')  AS receiptdate,
    pay.paymentmode as paymentmode,
    pay.transactionnumber as transactionnumber,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST%' THEN bad.adjustedamount ELSE 0 END) as interest,
    SUM(CASE WHEN taxheadcode LIKE 'PT_DEMANDNOTICE_CHARGE' THEN bad.adjustedamount ELSE 0 END) as demandnoticecharge,
    SUM(CASE WHEN taxheadcode LIKE 'PT_HOUSE_TAX' THEN bad.adjustedamount ELSE 0 END) as housetax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_WATER_TAX'  THEN bad.adjustedamount ELSE 0 END) as watertax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN bad.adjustedamount ELSE 0 END) as conservancyandscaveningtax ,
    SUM( CASE WHEN taxheadcode LIKE 'PT_LIGHTINING_TAX' THEN bad.adjustedamount ELSE 0 END) as lightininganddrainagetax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_TAX' THEN bad.adjustedamount ELSE 0 END) as educationtax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSOLIDATED_PROPERTY_TAX' THEN bad.adjustedamount ELSE 0 END) as consolidatedpropertytax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_SANITARY_CESS' THEN bad.adjustedamount ELSE 0 END) as sanitarycess,
    SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_CESS' THEN bad.adjustedamount ELSE 0 END) as educationcess,
    SUM(CASE WHEN taxheadcode LIKE 'PT_ADDL_WATER_TAX' THEN bad.adjustedamount ELSE 0 END) as additionalwatertax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_DRAINAGE_TAX' THEN bad.adjustedamount ELSE 0 END) as drainagetax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_LIGHTING_TAX' THEN bad.adjustedamount ELSE 0 END) as lightingtax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_SCAVENGING_TAX' THEN bad.adjustedamount ELSE 0 END) as scavengingtax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_LIBRARY_CESS' THEN bad.adjustedamount ELSE 0 END) as librarycess,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVE_TAX' THEN bad.adjustedamount ELSE 0 END) as conservancytax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_SPECIAL_CONSERVANCY_TAX' THEN bad.adjustedamount ELSE 0 END) as specialconservancytax,
    CASE WHEN pay.paymentmode LIKE 'CASH' THEN pd.amountpaid ELSE 0 END as cash,
    CASE WHEN pay.paymentmode LIKE 'CARD' THEN pd.amountpaid ELSE 0 END as card,
    CASE WHEN pay.paymentmode LIKE 'ONLINE' THEN pd.amountpaid ELSE 0 END as online,
    pd.amountpaid as totalcollection,
    un.name as collectorname,
    addr.doorno as doorno,
    (SELECT boundary_def.name FROM (VALUES tbl_boundary) AS boundary_def(name,code) where code=addr.locality) as mohallaname,
    poo.name as name
    from eg_pt_property pt
    Join eg_pt_address as addr on addr.propertyid=pt.id
    INNER JOIN egcl_bill as bill ON bill.consumercode = pt.propertyid  and bill.status != 'Cancelled'
    JOIN egcl_billdetial as bd ON bd.billid = bill.id
    INNER JOIN egcl_billaccountdetail as bad ON bd.id = bad .billdetailid
    LEFT OUTER JOIN egcl_paymentdetail as pd ON pd.billid = bill.id
    LEFT OUTER JOIN egcl_payment as pay ON pay.id = pd.paymentid and pay.paymentstatus != 'CANCELLED'
    LEFT OUTER Join eg_pg_transactions as pgtxn ON pay.transactionnumber = pgtxn.txn_id
    LEFT JOIN (
      SELECT propertyid, array_to_string(array_agg(name),', ') as name, array_to_string(array_agg(mobilenumber),', ') as mobilenumber
      FROM eg_pt_owner poo
      INNER JOIN eg_user ptuser ON ptuser.uuid = poo.userid where status = 'ACTIVE' group by propertyid) 
      poo ON poo.propertyid = pt.id
      JOIN eg_user as un ON pay.createdby::INTEGER=un.id
      where pay.tenantid LIKE $tenantid  and pd.businessservice='PT'and pay.paymentstatus != 'CANCELLED'
  groupby: GROUP BY pay.tenantid,pd.receiptnumber,bill.consumercode,pd.receiptdate,pay.transactionnumber,pay.paymentmode,addr.doorno,poo.name,pd.amountpaid,un.name,addr.locality,pt.oldpropertyid

- reportName: CancelledReceiptRegister
  summary: Receipt Register for cancelled Receipts
  version: 1.0.0
  moduleName: rainmaker-pt
  externalService:
  - entity: $.TenantBoundary[0].boundary
    apiURL: http://egov-location:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&boundaryType=Locality&tenantId=$tenantId
    keyOrder: name,code
    tableName: tbl_boundary
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyId 
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: PT_EXISTING_PROPERTY_ID
    type: string
    source: pt
    total: false   
  - name: receiptnumber
    label: PT_RECEIPT_RECEIPT_NO 
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: paymentmode
    label: PT_RECEIPT_PAYMENT_MODE
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: PT_RECEIPT_TRANSACTION_ID 
    type: string
    source: pt
    total: false
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: false
  - name: demandnoticecharge
    label: reports.pt.demandnotice
    type: string
    source: pt
    total: true   
  - name: housetax
    label: reports.pt.housetax
    type: string
    source: pt
    total: true
  - name: watertax
    label: PT_WATER_TAX 
    type: string
    source: pt
    total: true
  - name: conservancyandscaveningtax
    label: PT_CONSERVANCY_TAX
    type: string
    source: pt
    total: true
  - name: lightininganddrainagetax
    label: PT_LIGHTINING_TAX
    type: string
    source: pt
    total: true
  - name: lightingtax
    label: PT_LIGHTING_TAX
    type: string
    source: pt
    total: true  
  - name: educationtax
    label: PT_EDUCATION_TAX
    type: string
    source: pt
    total: true  
  - name: consolidatedpropertytax
    label: PT_CONSOLIDATED_PROPERTY_TAX
    type: string
    source: pt
    total: true 
  - name: sanitarycess
    label: PT_SANITARY_CESS
    type: string
    source: pt
    total: true
  - name: educationcess
    label: PT_EDUCATION_CESS
    type: string
    source: pt
    total: true 
  - name: additionalwatertax
    label: PT_ADDL_WATER_TAX
    type: string
    source: pt
    total: true 
  - name: drainagetax
    label: PT_DRAINAGE_TAX
    type: string
    source: pt
    total: true  
  - name: scavengingtax
    label: PT_SCAVENGING_TAX
    type: string
    source: pt
    total: true  
  - name: librarycess
    label: PT_LIBRARY_CESS
    type: string
    source: pt
    total: true 
  - name: conservancytax
    label: PT_CONSERVE_TAX
    type: string
    source: pt
    total: true   
  - name: specialconservancytax
    label: PT_SPECIAL_CONSERVANCY_TAX
    type: string
    source: pt
    total: true       
  - name: totalcollection
    label: PT_TOTAL_AMOUNT 
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  - name: paymentMode
    label: PT_RECEIPT_PAYMENT_MODE
    type: singlevaluelist
    pattern: 'list://CARD:CARD,CASH:CASH,CHEQUE:CHEQUE,Online:Online'
    source: pt
    isMandatory: false
    searchClause: AND paymentmode = $paymentMode
  query: |
    select initcap(split_part(pay.tenantid, '.', 2)) as tenantid,
    bill.consumercode as propertyid,pt.oldpropertyid as oldpropertyid,
    pd.receiptnumber  as receiptnumber,
    To_char(To_timestamp(pd.receiptdate/1000 ), 'DD/MM/YYYY')  AS receiptdate,
    pay.paymentmode as paymentmode,
    pay.transactionnumber as transactionnumber,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST%' THEN bad.adjustedamount ELSE 0 END) as interest,
    SUM(CASE WHEN taxheadcode LIKE 'PT_DEMANDNOTICE_CHARGE' THEN bad.adjustedamount ELSE 0 END) as demandnoticecharge,
    SUM(CASE WHEN taxheadcode LIKE 'PT_HOUSE_TAX' THEN bad.adjustedamount ELSE 0 END) as housetax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_WATER_TAX'  THEN bad.adjustedamount ELSE 0 END) as watertax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN bad.adjustedamount ELSE 0 END) as conservancyandscaveningtax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_LIGHTINING_TAX' THEN bad.adjustedamount ELSE 0 END) as lightininganddrainagetax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_TAX' THEN bad.adjustedamount ELSE 0 END) as educationtax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSOLIDATED_PROPERTY_TAX' THEN bad.adjustedamount ELSE 0 END) as consolidatedpropertytax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_SANITARY_CESS' THEN bad.adjustedamount ELSE 0 END) as sanitarycess,
    SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_CESS' THEN bad.adjustedamount ELSE 0 END) as educationcess,
    SUM(CASE WHEN taxheadcode LIKE 'PT_ADDL_WATER_TAX' THEN bad.adjustedamount ELSE 0 END) as additionalwatertax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_DRAINAGE_TAX' THEN bad.adjustedamount ELSE 0 END) as drainagetax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_LIGHTING_TAX' THEN bad.adjustedamount ELSE 0 END) as lightingtax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_SCAVENGING_TAX' THEN bad.adjustedamount ELSE 0 END) as scavengingtax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_LIBRARY_CESS' THEN bad.adjustedamount ELSE 0 END) as librarycess,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVE_TAX' THEN bad.adjustedamount ELSE 0 END) as conservancytax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_SPECIAL_CONSERVANCY_TAX' THEN bad.adjustedamount ELSE 0 END) as specialconservancytax,
    pd.amountpaid as totalcollection,
    un.name as collectorname,
    addr.doorno as doorno,
    (SELECT boundary_def.name FROM (VALUES tbl_boundary) AS boundary_def(name,code) where code=addr.locality) as mohallaname,
    poo.name
    from eg_pt_property pt
    Join eg_pt_address as addr on addr.propertyid=pt.id
    INNER JOIN egcl_bill as bill ON bill.consumercode = pt.propertyid  and bill.status = 'Cancelled'
    JOIN egcl_billdetial as bd ON bd.billid = bill.id
    INNER JOIN egcl_billaccountdetail as bad ON bd.id = bad .billdetailid
    LEFT OUTER JOIN egcl_paymentdetail as pd ON pd.billid = bill.id
    LEFT OUTER JOIN egcl_payment as pay ON pay.id = pd.paymentid and pay.paymentstatus != 'CANCELLED'
    LEFT OUTER Join eg_pg_transactions as pgtxn ON pay.transactionnumber = pgtxn.txn_id
    LEFT JOIN (
      SELECT propertyid, array_to_string(array_agg(name),', ') as name, array_to_string(array_agg(mobilenumber),', ') as mobilenumber
      FROM eg_pt_owner poo
      INNER JOIN eg_user ptuser ON ptuser.uuid = poo.userid where status = 'ACTIVE' group by propertyid) 
      poo ON poo.propertyid = pt.id
      JOIN eg_user as un ON pay.createdby::INTEGER=un.id
      where pay.tenantid LIKE $tenantid  and pd.businessservice='PT'and pay.paymentstatus = 'CANCELLED'
  groupby: GROUP BY pay.tenantid,pd.receiptnumber,bill.consumercode,pd.receiptdate,pay.transactionnumber,pay.paymentmode,addr.doorno,poo.name,pd.amountpaid,un.name,addr.locality,pt.oldpropertyid

- reportName: CBPTCollection
  summary: CB wise PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: totalamount
    label: PT_TOTAL_AMOUNT
    type: string
    source: pt
    total: true
  - name: totalamountpaid
    label: PT_AMOUNT_PAID
    type: string
    source: pt
    total: true
  - name: offline
    label: reports.pt.totaloffline
    type: string
    source: pt
    total: true
  - name: online
    label: reports.pt.totalonline
    type: string
    source: pt
    total: true
  - name: totalamountdue
    label: PT_TOTAL_DUES
    type: string
    source: pt
    total: true
  searchParams:
  - name: financialyear
    label: reports.pt.financialYear
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  query: |
    SELECT SUM(totalamount) as totalamount,SUM(amountpaid) AS totalamountpaid,
    SUM(onltotalamountpaid) as online,SUM(offtotalamountpaid) as offline, (SUM(totalamount) - SUM(amountpaid)) AS totalamountdue
    FROM (select COUNT(*) as totalast, propertyid, bill.totalamount as totalamount,pd.amountpaid as amountpaid ,onl.totalamountpaid as onltotalamountpaid,offl.totalamountpaid as offtotalamountpaid from eg_pt_asmt_assessment asmt
    inner join (select id, consumercode, sum(totalamount) as totalamount from (
    SELECT id, consumercode, 0 as totalamount FROM egcl_bill
    union all
    SELECT t1.id, t1.consumercode, totalamount FROM egcl_bill t1
    JOIN (
    SELECT consumercode, MIN(createdtime) AS MINDATE
    FROM egcl_bill
    GROUP BY consumercode) t2
    ON t1.consumercode = t2.consumercode
    AND t1.createdtime = t2.MINDATE) tab group by id, consumercode) bill on  bill.consumercode=asmt.propertyid 
    INNER JOIN (SELECT billid,amountpaid,paymentid from egcl_paymentdetail pd ) as pd ON pd.billid = bill.id
    LEFT OUTER JOIN (SELECT id,paymentmode,totalamountpaid FROM egcl_payment WHERE paymentmode = 'ONLINE') AS onl ON onl.id = pd.paymentid
    LEFT OUTER JOIN (SELECT id,paymentmode,totalamountpaid FROM egcl_payment WHERE paymentmode != 'ONLINE' ) AS offl ON offl.id = pd.paymentid
    where asmt.tenantid = $tenantid GROUP BY asmt.propertyid, bill.totalamount,pd.amountpaid,onl.totalamountpaid,offl.totalamountpaid)t where 1=1

- reportName: StateCancelledReceiptRegister
  summary: Receipt Register for cancelled Receipts State
  version: 1.0.0
  moduleName: rainmaker-pt
  externalService:
  - entity: $.TenantBoundary[0].boundary
    apiURL: http://egov-location:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&boundaryType=Locality&tenantId=$tenantId
    keyOrder: name,code
    tableName: tbl_boundary
  sourceColumns:
  - name: tenantid
    label: PT_ULB_CITY 
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.propertyId 
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: PT_EXISTING_PROPERTY_ID 
    type: string
    source: pt
    total: false 
  - name: receiptnumber
    label: PT_RECEIPT_RECEIPT_NO 
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: paymentmode
    label: PT_RECEIPT_PAYMENT_MODE
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: PT_RECEIPT_TRANSACTION_ID 
    type: string
    source: pt
    total: false
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: false
  - name: demandnoticecharge
    label: reports.pt.demandnotice
    type: string
    source: pt
    total: true  
  - name: housetax
    label: reports.pt.housetax
    type: string
    source: pt
    total: true
  - name: watertax
    label: PT_WATER_TAX 
    type: string
    source: pt
    total: true
  - name: conservancyandscaveningtax
    label: PT_CONSERVANCY_TAX
    type: string
    source: pt
    total: true
  - name: lightininganddrainagetax
    label: PT_LIGHTINING_TAX
    type: string
    source: pt
    total: true
  - name: lightingtax
    label: PT_LIGHTING_TAX
    type: string
    source: pt
    total: true
  - name: educationtax
    label: PT_EDUCATION_TAX
    type: string
    source: pt 
    total: true  
  - name: consolidatedpropertytax
    label: PT_CONSOLIDATED_PROPERTY_TAX
    type: string
    source: pt
    total: true 
  - name: sanitarycess
    label: PT_SANITARY_CESS
    type: string
    source: pt
    total: true
  - name: educationcess
    label: PT_EDUCATION_CESS
    type: string
    source: pt
    total: true 
  - name: additionalwatertax
    label: PT_ADDL_WATER_TAX
    type: string
    source: pt
    total: true 
  - name: drainagetax
    label: PT_DRAINAGE_TAX
    type: string
    source: pt
    total: true 
  - name: scavengingtax
    label: PT_SCAVENGING_TAX
    type: string
    source: pt
    total: true  
  - name: librarycess
    label: PT_LIBRARY_CESS
    type: string
    source: pt
    total: true 
  - name: conservancytax
    label: PT_CONSERVE_TAX
    type: string
    source: pt
    total: true   
  - name: specialconservancytax
    label: PT_SPECIAL_CONSERVANCY_TAX
    type: string
    source: pt
    total: true       
  - name: totalcollection
    label: PT_TOTAL_AMOUNT 
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  - name: ulb
    label: PT_ULB_CITY
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND pay.tenantid = $ulb
  - name: paymentMode
    label: PT_RECEIPT_PAYMENT_MODE
    type: singlevaluelist
    pattern: 'list://CASH:CASH,Online:Online,CARD:CARD,DD:DD,CHEQUE:CHEQUE'
    source: pt
    isMandatory: false
    searchClause: AND paymentmode = $paymentMode
  query: |
    select initcap(split_part(pay.tenantid, '.', 2)) as tenantid,
    bill.consumercode as propertyid,pt.oldpropertyid as oldpropertyid,
    pd.receiptnumber  as receiptnumber,
    To_char(To_timestamp(pd.receiptdate/1000 ), 'DD/MM/YYYY')  AS receiptdate,
    pay.paymentmode as paymentmode,
    pay.transactionnumber as transactionnumber,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST%' THEN bad.adjustedamount ELSE 0 END) as interest,
    SUM(CASE WHEN taxheadcode LIKE 'PT_DEMANDNOTICE_CHARGE' THEN bad.adjustedamount ELSE 0 END) as demandnoticecharge,
    SUM(CASE WHEN taxheadcode LIKE 'PT_HOUSE_TAX' THEN bad.adjustedamount ELSE 0 END) as housetax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_WATER_TAX'  THEN bad.adjustedamount ELSE 0 END) as watertax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN bad.adjustedamount ELSE 0 END) as conservancyandscaveningtax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_LIGHTINING_TAX' THEN bad.adjustedamount ELSE 0 END) as lightininganddrainagetax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_LIGHTING_TAX' THEN bad.adjustedamount ELSE 0 END) as lightingtax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_TAX' THEN bad.adjustedamount ELSE 0 END) as educationtax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSOLIDATED_PROPERTY_TAX' THEN bad.adjustedamount ELSE 0 END) as consolidatedpropertytax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_SANITARY_CESS' THEN bad.adjustedamount ELSE 0 END) as sanitarycess,
    SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_CESS' THEN bad.adjustedamount ELSE 0 END) as educationcess,
    SUM(CASE WHEN taxheadcode LIKE 'PT_ADDL_WATER_TAX' THEN bad.adjustedamount ELSE 0 END) as additionalwatertax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_DRAINAGE_TAX' THEN bad.adjustedamount ELSE 0 END) as drainagetax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_SCAVENGING_TAX' THEN bad.adjustedamount ELSE 0 END) as scavengingtax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_LIBRARY_CESS' THEN bad.adjustedamount ELSE 0 END) as librarycess,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVE_TAX' THEN bad.adjustedamount ELSE 0 END) as conservancytax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_SPECIAL_CONSERVANCY_TAX' THEN bad.adjustedamount ELSE 0 END) as specialconservancytax,
    pd.amountpaid as totalcollection,
    un.name as collectorname,
    addr.doorno as doorno,
    (SELECT boundary_def.name FROM (VALUES tbl_boundary) AS boundary_def(name,code) where code=addr.locality) as mohallaname,
    poo.name as name
    from eg_pt_property pt
    Join eg_pt_address as addr on addr.propertyid=pt.id
    INNER JOIN egcl_bill as bill ON bill.consumercode = pt.propertyid  and bill.status = 'Cancelled'
    JOIN egcl_billdetial as bd ON bd.billid = bill.id
    INNER JOIN egcl_billaccountdetail as bad ON bd.id = bad .billdetailid
    LEFT OUTER JOIN egcl_paymentdetail as pd ON pd.billid = bill.id
    LEFT OUTER JOIN egcl_payment as pay ON pay.id = pd.paymentid and pay.paymentstatus != 'CANCELLED'
    LEFT OUTER Join eg_pg_transactions as pgtxn ON pay.transactionnumber = pgtxn.txn_id
    LEFT JOIN (
      SELECT propertyid, array_to_string(array_agg(name),', ') as name, array_to_string(array_agg(mobilenumber),', ') as mobilenumber
      FROM eg_pt_owner poo
      INNER JOIN eg_user ptuser ON ptuser.uuid = poo.userid where status = 'ACTIVE' group by propertyid) 
      poo ON poo.propertyid = pt.id
      JOIN eg_user as un ON pay.createdby::INTEGER=un.id
      where pay.tenantid  != 'pb.testing' pd.businessservice='PT'and pay.paymentstatus = 'CANCELLED'
  groupby: GROUP BY pay.tenantid,pd.receiptnumber,bill.consumercode,pd.receiptdate,pay.transactionnumber,pay.paymentmode,addr.doorno,poo.name,pd.amountpaid,un.name,addr.locality,pt.oldpropertyid

- reportName: CBWidePtCollection
  summary: CB Wide PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: tenantid
    label: reports.pt.ulbName
    type: string
    source: pt
    total: false
  - name: totalamount
    label: PT_TOTAL_AMOUNT
    type: string
    source: pt
    total: true  
  - name: totalamountpaid
    label: PT_AMOUNT_PAID
    type: string
    source: pt
    total: true
  - name: offline
    label: reports.pt.totaloffline
    type: string
    source: pt
    total: true
  - name: online
    label: reports.pt.totalonline
    type: string
    source: pt
    total: true
  - name: totalamountdue
    label: PT_TOTAL_DUES
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate <= $toDate
  - name: ulb
    label: PT_ULB_CITY
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND bill.tenantid = $ulb
  - name: financialyear
    label: reports.pt.financialYear
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  query: |
    SELECT SUM(totalamount) as totalamount,SUM(amountpaid) AS totalamountpaid,
    SUM(onltotalamountpaid) as online,SUM(offtotalamountpaid) as offline, (SUM(totalamount) - SUM(amountpaid)) AS totalamountdue
    FROM (select COUNT(*) as totalast, propertyid, bill.totalamount as totalamount,pd.amountpaid as amountpaid ,onl.totalamountpaid as onltotalamountpaid,offl.totalamountpaid as offtotalamountpaid from eg_pt_asmt_assessment asmt
    inner join (select id, consumercode, sum(totalamount) as totalamount from (
    SELECT id, consumercode, 0 as totalamount FROM egcl_bill
    union all
    SELECT t1.id, t1.consumercode, totalamount FROM egcl_bill t1
    JOIN (
    SELECT consumercode, MIN(createdtime) AS MINDATE
    FROM egcl_bill
    GROUP BY consumercode) t2
    ON t1.consumercode = t2.consumercode
    AND t1.createdtime = t2.MINDATE) tab group by id, consumercode) bill on  bill.consumercode=asmt.propertyid 
    INNER JOIN (SELECT billid,amountpaid,paymentid from egcl_paymentdetail pd ) as pd ON pd.billid = bill.id
    LEFT OUTER JOIN (SELECT id,paymentmode,totalamountpaid FROM egcl_payment WHERE paymentmode = 'ONLINE') AS onl ON onl.id = pd.paymentid
    LEFT OUTER JOIN (SELECT id,paymentmode,totalamountpaid FROM egcl_payment WHERE paymentmode != 'ONLINE' ) AS offl ON offl.id = pd.paymentid
    where asmt.tenantid != 'pb.testing' GROUP BY asmt.propertyid, bill.totalamount,pd.amountpaid,onl.totalamountpaid,offl.totalamountpaid)t where 1=1

- reportName: UlbWisePtCollection
  summary: State Wide PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: totalassessments
    label: reports.pt.totalassessments
    type: string
    source: pt
    total: true
  - name: totalamountpaid
    label: PT_AMOUNT_PAID
    type: string
    source: pt
    total: true
  - name: totaloffline
    label: reports.pt.totaloffline
    type: string
    source: pt
    total: true
  - name: totalonline
    label: reports.pt.totalonline
    type: string
    source: pt
    total: true
  - name: totalamountdue
    label: PT_TOTAL_DUES
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND receiptdate <= $toDate
  - name: financialyear
    label: reports.pt.financialYear
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=egf-master&masterName=FinancialYear|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].code|$.MdmsRes.egf-master.FinancialYear.[?(@.module=='PT')].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND financialyear = $financialyear
  - name: usage
    label: Usage
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=PropertyTax&masterName=UsageCategoryMajor|$..code|$..name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND usagecategorymajor = $usage
  query: |
      SELECT 
      initcap(split_part(tenantid, '.', 2)) as tenantid, 
      COUNT(*) AS totalassessments, 
      SUM(totalamount) AS totalamount, 
      SUM(amount) AS totalamountpaid, 
      SUM(CASE WHEN collectiontype LIKE 'ONLINE' THEN amount ELSE 0 END) AS totalonline, 
      SUM(CASE WHEN collectiontype LIKE 'COUNTER' THEN amount ELSE 0 END) AS totaloffline, 
      (SUM(totalamount) - SUM(amount)) AS totalamountdue 
      FROM eg_pt_propertydetail_v2 AS pd 
      LEFT OUTER JOIN (SELECT consumercode, totalamount, amount, collectiontype, receiptdate FROM egcl_receiptheader AS rh 
      LEFT OUTER JOIN egcl_receiptinstrument AS ri ON rh.id = ri.receiptheader 
      LEFT OUTER JOIN egcl_instrumentheader AS ih ON ri.instrumentheader = ih.id and ih.instrumentstatus	 != 'CANCELLED' 
      where rh.status != 'Cancelled'
      ) AS tbl_amounts ON CONCAT(pd.property, ':', pd.assessmentnumber) = tbl_amounts.consumercode 
      WHERE tenantid LIKE CONCAT(SPLIT_PART($tenantid, '.', 1), '%') and tenantid = $tenantid
  groupby: GROUP BY tenantid
  orderby: ORDER BY tenantid, totalamountpaid DESC NULLS LAST

- reportName: DGDEReceiptRegister
  summary: Receipt Register
  version: 1.0.0
  moduleName: rainmaker-pt
  decryptionPathId: DGDEReceiptRegister
  externalService:
  - entity: $.TenantBoundary[0].boundary
    apiURL: http://egov-location:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&boundaryType=Locality&tenantId=$tenantId
    keyOrder: name,code
    tableName: tbl_boundary
  sourceColumns:
  - name: tenantid
    label: PT_ULB_CITY 
    type: string
    source: pt
    total: false
  - name: propertyid
    label: reports.pt.propertyId 
    type: string
    source: pt
    total: false
  - name: oldpropertyid
    label: PT_EXISTING_PROPERTY_ID
    type: string
    source: pt
    total: false
  - name: receiptnumber
    label: PT_RECEIPT_RECEIPT_NO 
    type: string
    source: pt
    total: false
  - name: receiptdate
    label: reports.pt.receiptDate
    type: string
    source: pt
    total: false
  - name: paymentmode
    label: PT_RECEIPT_PAYMENT_MODE
    type: string
    source: pt
    total: false
  - name: transactionnumber
    label: PT_RECEIPT_TRANSACTION_ID 
    type: string
    source: pt
    total: false
  - name: interest
    label: reports.pt.interest
    type: string
    source: pt
    total: true
  - name: demandnoticecharge
    label: reports.pt.demandnotice
    type: string
    source: pt
    total: true   
  - name: housetax
    label: reports.pt.housetax
    type: string
    source: pt
    total: true
  - name: watertax
    label: PT_WATER_TAX 
    type: string
    source: pt
    total: true
  - name: conservancyandscaveningtax
    label: PT_CONSERVANCY_TAX
    type: string
    source: pt
    total: true
  - name: lightininganddrainagetax
    label: PT_LIGHTINING_TAX
    type: string
    source: pt
    total: true
  - name: lightingtax
    label: PT_LIGHTING_TAX
    type: string
    source: pt
    total: true  
  - name: educationtax
    label: PT_EDUCATION_TAX
    type: string
    source: pt
    total: true 
  - name: consolidatedpropertytax
    label: PT_CONSOLIDATED_PROPERTY_TAX
    type: string
    source: pt
    total: true 
  - name: sanitarycess
    label: PT_SANITARY_CESS
    type: string
    source: pt
    total: true
  - name: educationcess
    label: PT_EDUCATION_CESS
    type: string
    source: pt
    total: true 
  - name: additionalwatertax
    label: PT_ADDL_WATER_TAX
    type: string
    source: pt
    total: true 
  - name: drainagetax
    label: PT_DRAINAGE_TAX
    type: string
    source: pt
    total: true
  - name: scavengingtax
    label: PT_SCAVENGING_TAX
    type: string
    source: pt
    total: true  
  - name: librarycess
    label: PT_LIBRARY_CESS
    type: string
    source: pt
    total: true 
  - name: conservancytax
    label: PT_CONSERVE_TAX
    type: string
    source: pt
    total: true   
  - name: specialconservancytax
    label: PT_SPECIAL_CONSERVANCY_TAX
    type: string
    source: pt
    total: true        
  - name: cash
    label: reports.pt.cash
    type: string
    source: pt
    total: true
  - name: card
    label: reports.pt.card
    type: string
    source: pt
    total: true
  - name: online
    label: reports.pt.online
    type: string
    source: pt
    total: true 
  - name: totalcollection
    label: PT_TOTAL_AMOUNT 
    type: string
    source: pt
    total: true
  - name: collectorname
    label: reports.pt.collectorname
    type: string
    source: pt
    total: false
  - name: mohallaname
    label: PT_PROPERTY_ADDRESS_MOHALLA
    type: string
    source: pt
    total: false
  - name: doorno
    label: PT_COMMON_DOOR_NO_LABEL
    type: string
    source: pt
    total: false
  - name: ownername
    label: reports.pt.ownername
    type: string
    source: pt
    total: false
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND pd.receiptdate <= $toDate
  - name: ulb
    label: PT_ULB_CITY
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND pay.tenantid = $ulb
  - name: paymentMode
    label: PT_RECEIPT_PAYMENT_MODE
    type: singlevaluelist
    pattern: 'list://CASH:Cash,Online:Online,CARD:Card,DD:DD,CHEQUE:Cheque'
    source: pt
    isMandatory: false
    searchClause: AND paymentmode = $paymentMode
  - name: collectorname
    label: reports.pt.collectorname
    type: singlevaluelist
    pattern: http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=PTCEMP|$.Employees[*].user.id|$.Employees[*].user.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND un.id = $collectorname::INTEGER
  query: |
    select initcap(split_part(pay.tenantid, '.', 2)) as tenantid,
    bill.consumercode as propertyid,pt.oldpropertyid as oldpropertyid,
    pd.receiptnumber  as receiptnumber,
    To_char(To_timestamp(pd.receiptdate/1000 ), 'DD/MM/YYYY')  AS receiptdate,
    pay.paymentmode as paymentmode,
    pay.transactionnumber as transactionnumber,
    SUM(CASE WHEN taxheadcode LIKE 'PT_TIME_INTEREST%' THEN bad.adjustedamount ELSE 0 END) as interest,
    SUM(CASE WHEN taxheadcode LIKE 'PT_DEMANDNOTICE_CHARGE' THEN bad.adjustedamount ELSE 0 END) as demandnoticecharge,
    SUM(CASE WHEN taxheadcode LIKE 'PT_HOUSE_TAX' THEN bad.adjustedamount ELSE 0 END) as housetax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_WATER_TAX'  THEN bad.adjustedamount ELSE 0 END) as watertax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVANCY_TAX' THEN bad.adjustedamount ELSE 0 END) as conservancyandscaveningtax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_LIGHTINING_TAX' THEN bad.adjustedamount ELSE 0 END) as lightininganddrainagetax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_TAX' THEN bad.adjustedamount ELSE 0 END) as educationtax ,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSOLIDATED_PROPERTY_TAX' THEN bad.adjustedamount ELSE 0 END) as consolidatedpropertytax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_SANITARY_CESS' THEN bad.adjustedamount ELSE 0 END) as sanitarycess,
    SUM(CASE WHEN taxheadcode LIKE 'PT_EDUCATION_CESS' THEN bad.adjustedamount ELSE 0 END) as educationcess,
    SUM(CASE WHEN taxheadcode LIKE 'PT_ADDL_WATER_TAX' THEN bad.adjustedamount ELSE 0 END) as additionalwatertax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_DRAINAGE_TAX' THEN bad.adjustedamount ELSE 0 END) as drainagetax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_LIGHTING_TAX' THEN bad.adjustedamount ELSE 0 END) as lightingtax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_SCAVENGING_TAX' THEN bad.adjustedamount ELSE 0 END) as scavengingtax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_LIBRARY_CESS' THEN bad.adjustedamount ELSE 0 END) as librarycess,
    SUM(CASE WHEN taxheadcode LIKE 'PT_CONSERVE_TAX' THEN bad.adjustedamount ELSE 0 END) as conservancytax,
    SUM(CASE WHEN taxheadcode LIKE 'PT_SPECIAL_CONSERVANCY_TAX' THEN bad.adjustedamount ELSE 0 END) as specialconservancytax,
    CASE WHEN pay.paymentmode LIKE 'CASH' THEN pd.amountpaid ELSE 0 END as cash,
    CASE WHEN pay.paymentmode LIKE 'CARD' THEN pd.amountpaid ELSE 0 END as card,
    CASE WHEN pay.paymentmode LIKE 'ONLINE' THEN pd.amountpaid ELSE 0 END as online,
    pd.amountpaid as totalcollection,
    un.name as collectorname,
    addr.doorno as doorno,
    (SELECT boundary_def.name FROM (VALUES tbl_boundary) AS boundary_def(name,code) where code=addr.locality) as mohallaname,
    poo.name as name
    from eg_pt_property pt
    Join eg_pt_address as addr on addr.propertyid=pt.id
    INNER JOIN egcl_bill as bill ON bill.consumercode = pt.propertyid  and bill.status != 'Cancelled'
    JOIN egcl_billdetial as bd ON bd.billid = bill.id
    INNER JOIN egcl_billaccountdetail as bad ON bd.id = bad .billdetailid
    LEFT OUTER JOIN egcl_paymentdetail as pd ON pd.billid = bill.id
    LEFT OUTER JOIN egcl_payment as pay ON pay.id = pd.paymentid and pay.paymentstatus != 'CANCELLED'
    LEFT OUTER Join eg_pg_transactions as pgtxn ON pay.transactionnumber = pgtxn.txn_id
    LEFT JOIN (
      SELECT propertyid, array_to_string(array_agg(name),', ') as name, array_to_string(array_agg(mobilenumber),', ') as mobilenumber
      FROM eg_pt_owner poo
      INNER JOIN eg_user ptuser ON ptuser.uuid = poo.userid where status = 'ACTIVE' group by propertyid) 
      poo ON poo.propertyid = pt.id
      JOIN eg_user as un ON pay.createdby::INTEGER=un.id
      where pay.tenantid != 'pb.testing' pd.businessservice='PT'and pay.paymentstatus != 'CANCELLED'
  groupby: GROUP BY pay.tenantid,pd.receiptnumber,bill.consumercode,pd.receiptdate,pay.transactionnumber,pay.paymentmode,addr.doorno,poo.name,pd.amountpaid,un.name,addr.locality

- reportName: DemandRegisterReport
  summary: Reports for Reconcillation of data in PT
  version: 1.0.0
  moduleName: rainmaker-pt
  decryptionPathId: DemandRegisterReport
  additionalConfig:
    print:
      pdfPageSize: "A2"
  externalService:
  - entity: $.TenantBoundary[0].boundary
    apiURL: http://egov-location:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&boundaryType=Locality&tenantId=$tenantId
    keyOrder: name,code
    tableName: tbl_boundary
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: oldcode
    label: PT_EXISTING_PROPERTY_ID
    type: string
    source: pt
    total: false
  - name: name
    label: PT_OWNER_NAME
    type: string
    total: false
    source: pt
  - name: mobilenumber
    label: PT_COMMON_APPLICANT_MOBILE_NO_LABEL
    type: string
    total: false
    source: pt    
  - name: addr
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: mohallaname
    label: PT_PROPERTY_ADDRESS_MOHALLA
    type: string
    source: pt  
    total: false
  - name: usagetype
    label: PT_COMMON_USAGE_TYPE
    type: string
    source: pt
    total: false
  - name: subusagetype
    label: PT_COMMON_SUB_USAGE_TYPE
    type: string
    source: pt
    total: false
  - name: arv
    label: PT_ASSESMENT_INFO_AREA_RENT
    type: string
    source: pt
    total: true
  - name: taxperiod
    label: reports.pt.taxperiod
    type: string
    source: pt
    total: false
  - name: emptyheader
    label: reports.pt.empty
    type: string
    source: pt
    total: false
  - name: housetax
    label: reports.pt.housetax
    type: string
    source: pt
    total: false
  - name: watertax
    label: PT_WATER_TAX
    type: string
    source: pt
    total: false
  - name: conservancyandscaveningtax
    label: PT_CONSERVANCY_TAX
    type: string
    source: pt
    total: false
  - name: educationtax
    label: PT_EDUCATION_TAX
    type: string
    source: pt
    total: false  
  - name: consolidatedpropertytax
    label: PT_CONSOLIDATED_PROPERTY_TAX
    type: string
    source: pt
    total: false 
  - name: sanitarycess
    label: PT_SANITARY_CESS
    type: string
    source: pt
    total: false
  - name: educationcess
    label: PT_EDUCATION_CESS
    type: string
    source: pt
    total: false 
  - name: additionalwatertax
    label: PT_ADDL_WATER_TAX
    type: string
    source: pt
    total: false 
  - name: drainagetax
    label: PT_DRAINAGE_TAX
    type: string
    source: pt
    total: false
  - name: lightingtax
    label: PT_LIGHTING_TAX
    type: string
    source: pt
    total: false
  - name: lightininganddrainagetax
    label: PT_LIGHTINING_TAX
    type: string
    source: pt
    total: false
  - name: scavengingtax
    label: PT_SCAVENGING_TAX
    type: string
    source: pt
    total: false   
  - name: librarycess
    label: PT_LIBRARY_CESS
    type: string
    source: pt
    total: false 
  - name: conservancytax
    label: PT_CONSERVE_TAX
    type: string
    source: pt
    total: false   
  - name: specialconservancytax
    label: PT_SPECIAL_CONSERVANCY_TAX
    type: string
    source: pt
    total: false             
  - name: demandnoticecharge
    label: PT_DEMANDNOTICE_CHARGE
    type: string
    source: pt
    total: false  
  - name: interest
    label: PT_TIME_INTEREST
    type: string
    source: pt
    total: false
  - name: rebate
    label: PT_TIME_REBATE
    type: string
    source: pt
    total: false
  - name: total
    label: PT_TOTAL_AMOUNT
    type: string
    source: pt
    total: false
  - name: advance
    label: ADVANCE_CARRYFORWARD
    type: string
    source: pt
    total: true  
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND createdtime >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND createdtime <= $toDate
  - name: Wardname
    label: PT_PROPERTY_ADDRESS_MOHALLA
    type: singlevaluelist
    pattern: http://egov-location:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&boundaryType=Locality&tenantId=$tenantid|$.TenantBoundary[*].boundary[*].code|$.TenantBoundary[*].boundary[*].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND locality = $Wardname
  query: | 
    select initcap(split_part(tenantid, '.', 2)) as tenantid,
    consumercode as propertyid, oldpropertyid as oldcode,
    name as name,mobilenumber as mobilenumber,
    (SELECT boundary_def.name FROM (VALUES tbl_boundary) AS boundary_def(name,code) where code=locality) as mohallaname,
    CONCAT(doorno,' ',street,' ',buildingname) as address  ,arv,
    initcap(split_part(usagecategory, '.', 1)) as usagetype,initcap(split_part(usagecategory, '.', 2)) as subusagetype,
    CONCAT(split_part(To_char((To_timestamp(taxperiodfrom / 1000) at time Zone 'Asia/Kolkata'), 'DD/MM/YYYY'),'/',3),'-',
    split_part(To_char((To_timestamp(taxperiodto / 1000) at time Zone 'Asia/Kolkata'), 'DD/MM/YYYY'),'/',3)) as taxperiod,
    CONCAT('Demand: ',E'\r\n','Collected: ',E'\r\n','Outstanding: ') as emptyheader,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_HOUSE_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_HOUSE_TAX' THEN  collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_HOUSE_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as houseTax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_WATER_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_WATER_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_WATER_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as watertax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_CONSERVANCY_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSERVANCY_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSERVANCY_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as conservancyandscaveningtax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_EDUCATION_TAX' THEN dem_tax ELSE 0 END),E'\r\n', 
    SUM(CASE WHEN dem_code = 'PT_EDUCATION_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_EDUCATION_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as educationtax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_CONSOLIDATED_PROPERTY_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSOLIDATED_PROPERTY_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSOLIDATED_PROPERTY_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as consolidatedpropertytax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_SANITARY_CESS' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SANITARY_CESS' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SANITARY_CESS'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as sanitarycess,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_EDUCATION_CESS' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_EDUCATION_CESS' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_EDUCATION_CESS'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as educationcess,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_ADDL_WATER_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_ADDL_WATER_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_ADDL_WATER_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as additionalwatertax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_DRAINAGE_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_DRAINAGE_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_DRAINAGE_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as drainagetax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_LIGHTING_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIGHTING_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIGHTING_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as lightingtax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_LIGHTINING_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIGHTINING_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIGHTINING_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as lightininganddrainagetax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_SCAVENGING_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SCAVENGING_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SCAVENGING_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as scavengingtax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_LIBRARY_CESS' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIBRARY_CESS' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIBRARY_CESS'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as librarycess,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_CONSERVE_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSERVE_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSERVE_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as conservancytax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_SPECIAL_CONSERVANCY_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SPECIAL_CONSERVANCY_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SPECIAL_CONSERVANCY_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as specialconservancytax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_TIME_INTEREST' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_TIME_INTEREST' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_TIME_INTEREST'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as interest,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_TIME_REBATE' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_TIME_REBATE' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_TIME_REBATE'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as rebate,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_DEMANDNOTICE_CHARGE' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_DEMANDNOTICE_CHARGE' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_DEMANDNOTICE_CHARGE'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as demandnoticecharge,
    CONCAT(SUM(CASE WHEN dem_code != 'PT_ADVANCE_CARRYFORWARD' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(collectionamount),E'\r\n',(SUM(CASE WHEN dem_code != 'PT_ADVANCE_CARRYFORWARD' THEN dem_tax ELSE 0 END)-SUM(collectionamount))) as total,
    SUM(CASE WHEN dem_code = 'PT_ADVANCE_CARRYFORWARD' THEN ABS(dem_tax) ELSE 0 END) as advance
    from (
    select demand.tenantid,
    demand.consumercode,
    demand.createdtime as createdtime,
    demand.taxperiodfrom as taxperiodfrom,
    demand.taxperiodto as taxperiodto,
    addr.doorno,
    addr.buildingname,
    addr.street,
    addr.locality,
    ptunit.usagecategory,
    ptunit.arv,
    pt.oldpropertyid,
    pt.propertytype,
    demanddetail.taxamount+COALESCE( amendtaxdetail.taxamount, 0 )  -demanddetail.collectionamount as taxout,
    CASE WHEN amendtaxdetail.id = demanddetail.id then 0 ELSE demanddetail.taxamount END as dem_tax,
    CASE WHEN amendtaxdetail.id = demanddetail.id then 0 ELSE demanddetail.collectionamount END as collectionamount,
    demanddetail.taxheadcode as dem_code,amendtaxdetail.taxamount as amen_tax,
    amendtaxdetail.taxheadcode as amen_code,poo.name as name,poo.mobilenumber as mobilenumber
    from egbs_demand_v1 demand
    inner join egbs_demanddetail_v1 as demanddetail on demanddetail.demandid= demand.id
    Inner join eg_pt_property as pt on  pt.propertyid=demand.consumercode
    left join egbs_amendment_taxdetail amendtaxdetail on amendtaxdetail.id = demanddetail.id
    Join eg_pt_address as addr on addr.propertyid=pt.id
    Left outer join eg_pt_unit as ptunit on ptunit.propertyid = pt.id
    LEFT JOIN (
      SELECT propertyid, array_to_string(array_agg(name),', ') as name, array_to_string(array_agg(mobilenumber),', ') as mobilenumber
      FROM eg_pt_owner poo
      INNER JOIN eg_user ptuser ON ptuser.uuid = poo.userid where status = 'ACTIVE' group by propertyid)
      poo ON poo.propertyid = pt.id
      where demand.tenantid LIKE $tenantid and demand.businessservice ='PT')t where 1=1 
  groupby: GROUP BY tenantid,consumercode,doorno,name,oldpropertyid,propertytype,usagecategory,mobilenumber,arv,locality,createdtime,taxperiodfrom,taxperiodto,street,buildingname
  orderby: ORDER BY consumercode

- reportName: DGDEDemandRegisterReport
  summary: Reports for Reconcillation of data in PT
  version: 1.0.0
  moduleName: rainmaker-pt
  decryptionPathId: DGDEDemandRegisterReport
  externalService:
  - entity: $.TenantBoundary[0].boundary
    apiURL: http://egov-location:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&boundaryType=Locality&tenantId=$tenantId
    keyOrder: name,code
    tableName: tbl_boundary
  additionalConfig:
    print:
      pdfPageSize: "A2"
  sourceColumns:
  - name: tenantid
    label: PT_ULB_CITY 
    type: string
    source: pt
    total: false   
  - name: propertyid
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: oldcode
    label: PT_EXISTING_PROPERTY_ID
    type: string
    source: pt
    total: false
  - name: name
    label: PT_OWNER_NAME
    type: string
    total: false
    source: pt
  - name: mobilenumber
    label: PT_COMMON_APPLICANT_MOBILE_NO_LABEL
    type: string
    total: false
    source: pt    
  - name: addr
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: mohallaname
    label: PT_PROPERTY_ADDRESS_MOHALLA
    type: string
    source: pt
    total: false
  - name: usagetype
    label: PT_COMMON_USAGE_TYPE
    type: string
    source: pt
    total: false
  - name: subusagetype
    label: PT_COMMON_SUB_USAGE_TYPE
    type: string
    source: pt
    total: false
  - name: arv
    label: PT_ASSESMENT_INFO_AREA_RENT
    type: string
    source: pt
    total: true
  - name: taxperiod
    label: reports.pt.taxperiod
    type: string
    source: pt
    total: false
  - name: emptyheader
    label: reports.pt.empty
    type: string
    source: pt
    total: false
  - name: housetax
    label: reports.pt.housetax
    type: string
    source: pt
    total: false
  - name: watertax
    label: PT_WATER_TAX
    type: string
    source: pt
    total: false
  - name: conservancyandscaveningtax
    label: PT_CONSERVANCY_TAX
    type: string
    source: pt
    total: false
  - name: educationtax
    label: PT_EDUCATION_TAX
    type: string
    source: pt
    total: false  
  - name: consolidatedpropertytax
    label: PT_CONSOLIDATED_PROPERTY_TAX
    type: string
    source: pt
    total: false 
  - name: sanitarycess
    label: PT_SANITARY_CESS
    type: string
    source: pt
    total: false
  - name: educationcess
    label: PT_EDUCATION_CESS
    type: string
    source: pt
    total: false 
  - name: additionalwatertax
    label: PT_ADDL_WATER_TAX
    type: string
    source: pt
    total: false 
  - name: drainagetax
    label: PT_DRAINAGE_TAX
    type: string
    source: pt
    total: false
  - name: lightingtax
    label: PT_LIGHTING_TAX
    type: string
    source: pt
    total: false
  - name: lightininganddrainagetax
    label: PT_LIGHTINING_TAX
    type: string
    source: pt
    total: false
  - name: scavengingtax
    label: PT_SCAVENGING_TAX
    type: string
    source: pt
    total: false   
  - name: librarycess
    label: PT_LIBRARY_CESS
    type: string
    source: pt
    total: false 
  - name: conservancytax
    label: PT_CONSERVE_TAX
    type: string
    source: pt
    total: false   
  - name: specialconservancytax
    label: PT_SPECIAL_CONSERVANCY_TAX
    type: string
    source: pt
    total: false            
  - name: demandnoticecharge
    label: PT_DEMANDNOTICE_CHARGE
    type: string
    source: pt
    total: false  
  - name: interest
    label: PT_TIME_INTEREST
    type: string
    source: pt
    total: false
  - name: rebate
    label: PT_TIME_REBATE
    type: string
    source: pt
    total: false
  - name: total
    label: PT_TOTAL_AMOUNT
    type: string
    source: pt
    total: false
  - name: advance
    label: ADVANCE_CARRYFORWARD
    type: string
    source: pt
    total: true 
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND createdtime >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND createdtime <= $toDate
  - name: ulb
    label: PT_ULB_CITY
    type: singlevaluelist
    pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND tenantid = $ulb
  - name: Wardname
    label: PT_PROPERTY_ADDRESS_MOHALLA
    type: singlevaluelist
    pattern: http://egov-location:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&boundaryType=Locality&tenantId=$tenantid|$.TenantBoundary[*].boundary[*].code|$.TenantBoundary[*].boundary[*].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND locality = $Wardname
  query: | 
    select initcap(split_part(tenantid, '.', 2)) as tenantid,
    consumercode as propertyid, oldpropertyid as oldcode,
    name as name,mobilenumber as mobilenumber,
    (SELECT boundary_def.name FROM (VALUES tbl_boundary) AS boundary_def(name,code) where code=locality) as mohallaname,
    CONCAT(doorno,' ',street,' ',buildingname) as address  ,arv,
    initcap(split_part(usagecategory, '.', 1)) as usagetype,initcap(split_part(usagecategory, '.', 2)) as subusagetype,
    CONCAT(split_part(To_char((To_timestamp(taxperiodfrom / 1000) at time Zone 'Asia/Kolkata'), 'DD/MM/YYYY'),'/',3),'-',
    split_part(To_char((To_timestamp(taxperiodto / 1000) at time Zone 'Asia/Kolkata'), 'DD/MM/YYYY'),'/',3)) as taxperiod,
    CONCAT('Demand: ',E'\r\n','Collected: ',E'\r\n','Outstanding: ') as emptyheader,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_HOUSE_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_HOUSE_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_HOUSE_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as houseTax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_WATER_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_WATER_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_WATER_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as watertax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_CONSERVANCY_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSERVANCY_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSERVANCY_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as conservancyandscaveningtax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_EDUCATION_TAX' THEN dem_tax ELSE 0 END),E'\r\n', 
    SUM(CASE WHEN dem_code = 'PT_EDUCATION_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_EDUCATION_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as educationtax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_CONSOLIDATED_PROPERTY_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSOLIDATED_PROPERTY_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSOLIDATED_PROPERTY_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as consolidatedpropertytax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_SANITARY_CESS' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SANITARY_CESS' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SANITARY_CESS'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as sanitarycess,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_EDUCATION_CESS' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_EDUCATION_CESS' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_EDUCATION_CESS'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as educationcess,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_ADDL_WATER_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_ADDL_WATER_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_ADDL_WATER_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as additionalwatertax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_DRAINAGE_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_DRAINAGE_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_DRAINAGE_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as drainagetax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_LIGHTING_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIGHTING_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIGHTING_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as lightingtax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_LIGHTINING_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIGHTINING_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIGHTINING_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as lightininganddrainagetax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_SCAVENGING_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SCAVENGING_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SCAVENGING_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as scavengingtax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_LIBRARY_CESS' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIBRARY_CESS' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIBRARY_CESS'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as librarycess,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_CONSERVE_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSERVE_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSERVE_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as conservancytax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_SPECIAL_CONSERVANCY_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SPECIAL_CONSERVANCY_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SPECIAL_CONSERVANCY_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as specialconservancytax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_TIME_INTEREST' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_TIME_INTEREST' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_TIME_INTEREST'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as interest,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_TIME_REBATE' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_TIME_REBATE' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_TIME_REBATE'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as rebate,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_DEMANDNOTICE_CHARGE' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_DEMANDNOTICE_CHARGE' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_DEMANDNOTICE_CHARGE'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as demandnoticecharge,
    CONCAT(SUM(CASE WHEN dem_code != 'PT_ADVANCE_CARRYFORWARD' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(collectionamount),E'\r\n',(SUM(CASE WHEN dem_code != 'PT_ADVANCE_CARRYFORWARD' THEN dem_tax ELSE 0 END))-SUM(collectionamount)+SUM(CASE WHEN (amen_tax)!=0 then amen_tax else 0 end)) as total,
    SUM(CASE WHEN dem_code = 'PT_ADVANCE_CARRYFORWARD' THEN ABS(dem_tax) ELSE 0 END) as advance
    from (
    select demand.tenantid,
    demand.consumercode,
    demand.createdtime as createdtime,
    demand.taxperiodfrom as taxperiodfrom,
    demand.taxperiodto as taxperiodto,
    addr.doorno,
    addr.buildingname,
    addr.street,
    addr.locality,
    ptunit.usagecategory,
    ptunit.arv,
    pt.oldpropertyid,
    pt.propertytype,
    demanddetail.taxamount+COALESCE( amendtaxdetail.taxamount, 0 )  -demanddetail.collectionamount as taxout,
    CASE WHEN amendtaxdetail.id = demanddetail.id then 0 ELSE demanddetail.taxamount END as dem_tax,
    CASE WHEN amendtaxdetail.id = demanddetail.id then 0 ELSE demanddetail.collectionamount END as collectionamount,
    demanddetail.taxheadcode as dem_code,amendtaxdetail.taxamount as amen_tax,
    amendtaxdetail.taxheadcode as amen_code,poo.name as name,poo.mobilenumber as mobilenumber
    from egbs_demand_v1 demand
    inner join egbs_demanddetail_v1 as demanddetail on demanddetail.demandid= demand.id
    Inner join eg_pt_property as pt on  pt.propertyid=demand.consumercode
    left join egbs_amendment_taxdetail amendtaxdetail on amendtaxdetail.id = demanddetail.id
    Join eg_pt_address as addr on addr.propertyid=pt.id
    Left outer join eg_pt_unit as ptunit on ptunit.propertyid = pt.id
    LEFT JOIN (
      SELECT propertyid, array_to_string(array_agg(name),', ') as name, array_to_string(array_agg(mobilenumber),', ') as mobilenumber
      FROM eg_pt_owner poo
      INNER JOIN eg_user ptuser ON ptuser.uuid = poo.userid where status = 'ACTIVE' group by propertyid)
      poo ON poo.propertyid = pt.id
      where demand.tenantid != 'pb.testing' and demand.businessservice ='PT')t where 1=1 
  groupby: GROUP BY tenantid,consumercode,doorno,name,oldpropertyid,propertytype,usagecategory,mobilenumber, arv,locality,createdtime,taxperiodfrom,taxperiodto,street,buildingname
  orderby: ORDER BY tenantid,consumercode
  
- reportName: CBPTDemandCollection
  summary: CB wise PT Collection
  version: 1.0.0
  moduleName: rainmaker-pt
  sourceColumns:
  - name: amount
    label: reports.pt.empty
    type: string
    source: pt
    total: false
  - name: housetax
    label: reports.pt.housetax
    type: string
    source: pt
    total: false
  - name: watertax
    label: PT_WATER_TAX
    type: string
    source: pt
    total: false
  - name: conservancyandscaveningtax
    label: PT_CONSERVANCY_TAX
    type: string
    source: pt
    total: false
  - name: educationtax
    label: PT_EDUCATION_TAX
    type: string
    source: pt
    total: false  
  - name: consolidatedpropertytax
    label: PT_CONSOLIDATED_PROPERTY_TAX
    type: string
    source: pt
    total: false 
  - name: sanitarycess
    label: PT_SANITARY_CESS
    type: string
    source: pt
    total: false
  - name: educationcess
    label: PT_EDUCATION_CESS
    type: string
    source: pt
    total: false 
  - name: additionalwatertax
    label: PT_ADDL_WATER_TAX
    type: string
    source: pt
    total: false 
  - name: drainagetax
    label: PT_DRAINAGE_TAX
    type: string
    source: pt
    total: false
  - name: lightingtax
    label: PT_LIGHTING_TAX
    type: string
    source: pt
    total: false
  - name: lightininganddrainagetax
    label: PT_LIGHTINING_TAX
    type: string
    source: pt
    total: false
  - name: scavengingtax
    label: PT_SCAVENGING_TAX
    type: string
    source: pt
    total: false   
  - name: librarycess
    label: PT_LIBRARY_CESS
    type: string
    source: pt
    total: false 
  - name: conservancytax
    label: PT_CONSERVE_TAX
    type: string
    source: pt
    total: false   
  - name: specialconservancytax
    label: PT_SPECIAL_CONSERVANCY_TAX
    type: string
    source: pt
    total: false             
  - name: demandnoticecharge
    label: PT_DEMANDNOTICE_CHARGE
    type: string
    source: pt
    total: false  
  - name: interest
    label: PT_TIME_INTEREST
    type: string
    source: pt
    total: false
  - name: rebate
    label: PT_TIME_REBATE
    type: string
    source: pt
    total: false
  - name: total
    label: PT_TOTAL_AMOUNT
    type: string
    source: pt
    total: false
  - name: advance
    label: ADVANCE_CARRYFORWARD
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND createdtime >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND createdtime <= $toDate
  query: |
    select initcap(split_part(tenantid, '.', 2)) as tenantid,
    CONCAT('Demand: ',E'\r\n','Collected: ',E'\r\n','Outstanding:') as amount,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_HOUSE_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_HOUSE_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_HOUSE_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END) ) as houseTax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_WATER_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_WATER_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_WATER_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as watertax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_CONSERVANCY_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSERVANCY_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSERVANCY_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END) ) as conservancyandscaveningtax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_EDUCATION_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_EDUCATION_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_EDUCATION_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as educationtax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_CONSOLIDATED_PROPERTY_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSOLIDATED_PROPERTY_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSOLIDATED_PROPERTY_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as consolidatedpropertytax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_SANITARY_CESS' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SANITARY_CESS' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SANITARY_CESS'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as sanitarycess,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_EDUCATION_CESS' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_EDUCATION_CESS' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_EDUCATION_CESS'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as educationcess,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_ADDL_WATER_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_ADDL_WATER_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_ADDL_WATER_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as additionalwatertax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_DRAINAGE_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_DRAINAGE_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_DRAINAGE_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as drainagetax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_LIGHTING_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIGHTING_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIGHTING_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as lightingtax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_LIGHTINING_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIGHTINING_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIGHTINING_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as lightininganddrainagetax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_SCAVENGING_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SCAVENGING_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SCAVENGING_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as scavengingtax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_LIBRARY_CESS' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIBRARY_CESS' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_LIBRARY_CESS'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as librarycess,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_CONSERVE_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSERVE_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_CONSERVE_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as conservancytax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_SPECIAL_CONSERVANCY_TAX' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SPECIAL_CONSERVANCY_TAX' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_SPECIAL_CONSERVANCY_TAX'  then  COALESCE( taxout, 0 ) ELSE 0 END)) as specialconservancytax,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_TIME_INTEREST' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_TIME_INTEREST' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_TIME_INTEREST' then  dem_tax -collectionamount ELSE 0 END)) as interest,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_TIME_REBATE' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_TIME_REBATE' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_TIME_REBATE' then  dem_tax -collectionamount ELSE 0 END)) as rebate,
    CONCAT(SUM(CASE WHEN dem_code = 'PT_DEMANDNOTICE_CHARGE' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_DEMANDNOTICE_CHARGE' THEN collectionamount ELSE 0 END),E'\r\n',
    SUM(CASE WHEN dem_code = 'PT_DEMANDNOTICE_CHARGE' then  dem_tax -collectionamount ELSE 0 END)) as demandnoticecharge,
    CONCAT(SUM(CASE WHEN dem_code != 'PT_ADVANCE_CARRYFORWARD' THEN dem_tax ELSE 0 END),E'\r\n',
    SUM(collectionamount),E'\r\n',(SUM(CASE WHEN dem_code != 'PT_ADVANCE_CARRYFORWARD' THEN dem_tax ELSE 0 END)-SUM(collectionamount))) as total,
    SUM(CASE WHEN dem_code = 'PT_ADVANCE_CARRYFORWARD' THEN ABS(dem_tax) ELSE 0 END) as advance
    from (
    select demand.tenantid,
    demand.createdtime as createdtime,
    demanddetail.taxamount+COALESCE( amendtaxdetail.taxamount, 0 )  -demanddetail.collectionamount as taxout,
    CASE WHEN amendtaxdetail.id = demanddetail.id then 0 ELSE demanddetail.taxamount END as dem_tax,
    CASE WHEN amendtaxdetail.id = demanddetail.id then 0 ELSE demanddetail.collectionamount END as collectionamount,
    demanddetail.taxheadcode as dem_code,amendtaxdetail.taxamount as amen_tax,
    amendtaxdetail.taxheadcode as amen_code
    from egbs_demand_v1 demand
    Inner join eg_pt_property as pt on  pt.propertyid=demand.consumercode
    inner join egbs_demanddetail_v1 as demanddetail on demanddetail.demandid= demand.id
    left join egbs_amendment_taxdetail amendtaxdetail on amendtaxdetail.id = demanddetail.id
    where demand.tenantid LIKE $tenantid and demand.businessservice ='PT')t  where 1 =  1 
  groupby: GROUP BY tenantid
  orderby: ORDER BY tenantid

- reportName: DemandRegisterSummaryReport
  summary: PT Demand Register Summary Report
  version: 1.0.0
  moduleName: rainmaker-pt
  decryptionPathId: DemandRegisterSummaryReport
  externalService:
  - entity: $.TenantBoundary[0].boundary
    apiURL: http://egov-location:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&boundaryType=Locality&tenantId=$tenantId
    keyOrder: name,code
    tableName: tbl_boundary
  sourceColumns:
  - name: propertyid
    label: reports.pt.propertyId
    type: string
    source: pt
    total: false
  - name: oldcode
    label: PT_EXISTING_PROPERTY_ID
    type: string
    source: pt
    total: false
  - name: abaspropertyid
    label: PT_ABAS_ID
    type: string
    source: pt
    total: false
  - name: name
    label: PT_OWNER_NAME
    type: string
    total: false
    source: pt
  - name: mobilenumber
    label: PT_COMMON_APPLICANT_MOBILE_NO_LABEL
    type: string
    total: false
    source: pt    
  - name: addr
    label: reports.pt.address
    type: string
    source: pt
    total: false
  - name: mohallaname
    label: PT_PROPERTY_ADDRESS_MOHALLA
    type: string
    source: pt  
    total: false
  - name: arv
    label: PT_ASSESMENT_INFO_AREA_RENT
    type: string
    source: pt
    total: true
  - name: total
    label: PT_TOTAL_AMOUNT
    type: string
    source: pt
    total: true
  - name: totalcollection
    label: reports.pt.collection
    type: string
    source: pt
    total: true
  - name: outstanding
    label: PT_DUE
    type: string
    source: pt
    total: true
  searchParams:
  - name: fromDate
    label: reports.pt.fromDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND demand.createdtime >= $fromDate
  - name: toDate
    label: reports.pt.toDate
    type: epoch
    source: pt
    isMandatory: false
    searchClause: AND demand.createdtime <= $toDate
  - name: Wardname
    label: PT_PROPERTY_ADDRESS_MOHALLA
    type: singlevaluelist
    pattern: http://egov-location:8080/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&boundaryType=Locality&tenantId=$tenantid|$.TenantBoundary[*].boundary[*].code|$.TenantBoundary[*].boundary[*].name
    source: pt
    wrapper: true
    isMandatory: false
    searchClause: AND locality = $Wardname
  query: | 
    select consumercode as propertyid,pt.oldpropertyid as oldcode,pt.abaspropertyid as abaspropertyid, SUM(dd.taxamount) as total ,SUM(dd.collectionamount) as totalcollection,
    SUM(dd.taxamount)-SUM(dd.collectionamount)  as  outstanding, CONCAT(addr.doorno,' ',addr.street,' ',addr.buildingname) as addr ,ptunit.arv as arv,
    (SELECT boundary_def.name FROM (VALUES tbl_boundary) AS boundary_def(name,code) where code=addr.locality) as mohallaname,	
    poo.name as name,poo.mobilenumber
    from egbs_demand_v1 demand
    inner join eg_pt_property as pt on pt.propertyid = demand.consumercode
    inner join egbs_demanddetail_v1 as dd on dd.demandid= demand.id
    Join eg_pt_address as addr on addr.propertyid=pt.id
    LEFT JOIN (
      SELECT propertyid, array_to_string(array_agg(name),', ') as name, array_to_string(array_agg(mobilenumber),', ') as mobilenumber
      FROM eg_pt_owner poo
      INNER JOIN eg_user ptuser ON ptuser.uuid = poo.userid where status = 'ACTIVE' group by propertyid) 
      poo ON poo.propertyid = pt.id
      Left outer join eg_pt_unit as ptunit on ptunit.propertyid = pt.id
      where demand.tenantid LIKE $tenantid
  groupby: GROUP BY consumercode,pt.oldpropertyid,pt.abaspropertyid,poo.name,poo.mobilenumber,addr.doorno,addr.street,addr.buildingname,ptunit.arv,addr.locality
  orderby: ORDER BY consumercode